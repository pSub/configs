#! /usr/bin/env nix-shell
#! nix-shell --pure -i zsh -p zsh openssl sops gawk

# This script creates mTLS certificates for services you run
# through nginx on NixOS.
#
# Just define the certificate like so in your configuration.nix
#
#   serives.nginx.virtualhosts."app.example.com".extraConfig = ''
#     ssl_verify_client on;
#     ssl_client_certificate /run/secrets/mtls/app;
#   '';
#
# This script will search for all occurances of ssl_client_certificate
# and use the last element of the pass as an identifier for the
# certificate. This identifier has to be unique.
#
# Using this identifier the script generates certificates, encrpts the
# server certificate with sops and provides a nix-sops file.

set -e

echo -n "Password: "
read -s PASS

BASE=${0:a:h}/..

DECLARED_CERTS=($(awk '{if(/ssl_client_certificate/) print $2}' configuration.nix | sort))

for DECLARED_CERT in "${DECLARED_CERTS[@]}"; do
    APP=$(basename $DECLARED_CERT | tr -d ';')

    DEST_DIR="$BASE/mtls/certs/$APP"

    mkdir -p "$DEST_DIR"
    cd "$DEST_DIR"

    # Create key, client and server certificate
    openssl genrsa -out client.key 4096
    openssl req -new -x509 -days 365 -key client.key -out client.crt \
      -subj "/CN=$APP/O=pascal-wittmann.de"
    openssl pkcs12 -export -in client.crt -inkey client.key -out client.pfx -password pass:"$PASS"

    # Encrypt server certificate
    sops --encrypt client.crt > $BASE/mtls/$APP.yaml
done;

# Create file for nix-sops
cat > $BASE/mtls-secrets.nix << EOF
{
  sops.secrets = {
$(
for DECLARED_CERT in "${DECLARED_CERTS[@]}"; do
    APP=$(basename $DECLARED_CERT | tr -d ';')

    echo "    \"mtls/$APP\" = {
      sopsFile = ./mtls/$APP.yaml;
      format = \"binary\";
      owner = \"nginx\";
     };"
done
)
  };
}
EOF

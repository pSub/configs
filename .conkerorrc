// -*- mode: js -*-

// Display the mode-line
mode_line_mode(true);

// Disable clock in modeline
remove_hook("mode_line_hook", mode_line_adder(clock_widget));

// Disable scroll position in modeline
remove_hook("mode_line_hook", mode_line_adder(current_buffer_scroll_position_widget));

// Allow to install extensions
session_pref("xpinstall.whitelist.required", false);


/* -------- Imports --------- */

// I'd like to have tabs
require("new-tabs.js");

// Load github mode
require("github");

// Load Duck Duck Go mode
require("duckduckgo");

// Click to open new tabs
require("clicks-in-new-buffer.js");


/* -------- User Defined Functions --------- */

interactive("search-clipboard-contents", "Search in Google the content of the X clipboard (the selected text)",
              "find-url",
              $browser_object=
              function(I) {
                  return "google "+ read_from_x_primary_selection();
              }
);


// selection searches
function create_selection_search(webjump, key) {
    interactive(webjump+"-selection-search",
                "Search " + webjump + " with selection contents",
                "find-url-new-buffer",
                $browser_object = function (I) {
                    return webjump + " " + I.buffer.top_frame.getSelection();});
    define_key(content_buffer_normal_keymap, key.toUpperCase(), webjump + "-selection-search");

    interactive("prompted-"+webjump+"-search", null,
                function (I) {
                    var term = yield I.minibuffer.read_url($prompt = "Search "+webjump+":",
                                                           $initial_value = webjump+" ");
                    browser_object_follow(I.buffer, FOLLOW_DEFAULT, term);
                });
    define_key(content_buffer_normal_keymap, key, "prompted-" + webjump + "-search");
}

create_selection_search("wikipedia","w");
create_selection_search("duckduckgo", "d");


/* -------- User Variables --------- */

// Display the url before going to it in hints mode
hints_display_url_panel = true;

// If the select is unambigous open the link directly
hints_auto_exit_delay = 1;

// Auto completion in the minibuffer
minibuffer_auto_complete_default = true;
url_completion_use_history = true; // Should work since bf05c87405
url_completion_use_bookmarks = true;

// Set to either OPEN_NEW_BUFFER or OPEN_NEW_BUFFER_BACKGROUND
clicks_in_new_buffer_target = OPEN_NEW_BUFFER_BACKGROUND; // Now buffers open in background.

// Set to 0 = left mouse, 1 = middle mouse, 2 = right mouse
clicks_in_new_buffer_button = 2; //  Now right mouse follows links in new buffers.

// Set default download directory
cwd=get_home_directory();
cwd.append("downloads");

can_kill_last_buffer = false;

// xkcd add mouse-over text
xkcd_add_title = true;

// view source in your editor.
view_source_use_external_editor = true;

// load download buffers in the background in the current
// window, instead of in new windows.
download_buffer_automatic_open_target = OPEN_NEW_BUFFER_BACKGROUND;

// load urls from the command line in new buffers instead
// of new windows.
url_remoting_fn = load_url_in_new_buffer;


/* -------- Protocol Handlers --------- */

set_protocol_handler("mailto", find_file_in_path("thunderbird"));


/* -------- Content Handlers --------- */

external_content_handlers.set("application/pdf", "pdfviewer");

/* -------- Key Bindings --------- */

// Redefine C-f as "forwards" and C-b as "backwards"
define_key(content_buffer_normal_keymap, "C-f", "forward");
define_key(content_buffer_normal_keymap, "C-b", "back");

// Make M-f and M-b switch to next and previous buffers
define_key(content_buffer_normal_keymap, "C-tab", "buffer-next");
define_key(content_buffer_normal_keymap, "C-S-tab", "buffer-previous");

// Use C-l to follow link in new background buffer
define_key(default_global_keymap, "C-l", "follow-new-buffer-background");

// Use M-y to search with google for the clipboard content
define_key(content_buffer_normal_keymap, "M-y", "search-clipboard-contents");

// make C-c C-c "submit form"
define_key(content_buffer_normal_keymap, "C-c C-c", "submit-form");


/* -------- Web Jumps --------- */
define_webjump("hoogle", "http://haskell.org/hoogle/?hoogle=%s",
               $alternative = "http://haskell.org/hoogle/");

define_webjump("hackage", "http://google.com/search?as_sitesearch=hackage.haskell.org%2Fpackage&as_q=%s");

